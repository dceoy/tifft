[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tifft"
version = "0.2.0"
description = "Technical Indicators for Financial Trading"
authors = [{name = "Daichi Narushima", email = "dceoy@users.noreply.github.com"}]
maintainers = [{name = "Daichi Narushima", email = "dceoy@users.noreply.github.com"}]
license = "AGPL-3.0-or-later"
license-files = ["LICENSE"]
readme = "README.md"
requires-python = ">= 3.11"
dependencies = [
  "docopt >= 0.6.2",
  "pandas >= 2.2.2",
  "pandas-datareader>=0.10.0",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Financial and Insurance Industry",
  "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS",
  "Programming Language :: Python :: 3",
  "Topic :: Office/Business :: Financial :: Investment",
]

[project.urls]
Homepage = "https://github.com/dceoy/tifft"
Repository = "https://github.com/dceoy/tifft"

[project.scripts]
tifft = "tifft.cli:main"

[tool.uv]
dev-dependencies = [
  "ruff >= 0.11.0",
  "pyright >= 1.1.402",
  "pytest >= 8.0.0",
  "pytest-mock >= 3.12.0",
  "pytest-cov >= 5.0.0",
  "pandas-stubs >= 2.2.3.250527",
]

[tool.uv.build-backend]
source-include = ["pdmt5/**", "LICENSE"]
source-exclude = ["test/**"]

[tool.ruff]
line-length = 88
exclude = ["build", ".venv"]
preview = true

[tool.ruff.lint]
select = [
  "F",      # Pyflakes (F)
  "E",      # pycodestyle error (E)
  "W",      # pycodestyle warning (W)
  "C90",    # mccabe (C90)
  "I",      # isort (I)
  "N",      # pep8-naming (N)
  "D",      # pydocstyle (D)
  "UP",     # pyupgrade (UP)
  "S",      # flake8-bandit (S)
  "B",      # flake8-bugbear (B)
  "C4",     # flake8-comprehensions (C4)
  "SIM",    # flake8-simplify (SIM)
  "ARG",    # flake8-unused-arguments (ARG)
  "PD",     # pandas-vet (PD)
  "PLC",    # Pylint convention (PLC)
  "PLE",    # Pylint error (PLE)
  "PLR",    # Pylint refactor (PLR)
  "PLW",    # Pylint warning (PLW)
  "FLY",    # flynt (FLY)
  "NPY",    # NumPy-specific rules (NPY)
  "PERF",   # Perflint (PERF)
  "FURB",   # refurb (FURB)
  "RUF",    # Ruff-specific rules (RUF)
  "YTT",    # flake8-2020 (YTT)
  "ANN",    # flake8-annotations (ANN)
  "ASYNC",  # flake8-async (ASYNC)
  "BLE",    # flake8-blind-except (BLE)
  "FBT",    # flake8-boolean-trap (FBT)
  "A",      # flake8-builtins (A)
  "COM",    # flake8-commas (COM)
  # "CPY",    # flake8-copyright (CPY)
  "DTZ",    # flake8-datetimez (DTZ)
  "T10",    # flake8-debugger (T10)
  "DJ",     # flake8-django (DJ)
  "EM",     # flake8-errmsg (EM)
  "EXE",    # flake8-executable (EXE)
  "FA",     # flake8-future-annotations (FA)
  "ISC",    # flake8-implicit-str-concat (ISC)
  "ICN",    # flake8-import-conventions (ICN)
  "LOG",    # flake8-logging (LOG)
  "G",      # flake8-logging-format (G)
  "INP",    # flake8-no-pep420 (INP)
  "PIE",    # flake8-pie (PIE)
  "T20",    # flake8-print (T20)
  "PYI",    # flake8-pyi (PYI)
  "PT",     # flake8-pytest-style (PT)
  "Q",      # flake8-quotes (Q)
  "RSE",    # flake8-raise (RSE)
  # "RET",    # flake8-return (RET)
  "SLF",    # flake8-self (SLF)
  "SLOT",   # flake8-slots (SLOT)
  "TID",    # flake8-tidy-imports (TID)
  "TCH",    # flake8-type-checking (TCH)
  "INT",    # flake8-gettext (INT)
  "PTH",    # flake8-use-pathlib (PTH)
  "TD",     # flake8-todos (TD)
  "FIX",    # flake8-fixme (FIX)
  "ERA",    # eradicate (ERA)
  "PGH",    # pygrep-hooks (PGH)
  "TRY",    # tryceratops (TRY)
  "FAST",   # FastAPI (FAST)
  "AIR",    # Airflow (AIR)
  "DOC",    # pydoclint (DOC)
]
ignore = [
  "COM812",   # missing-trailing-comma
  # "FBT001",   # boolean-type-hint-positional-argument
  # "FBT002",   # boolean-default-value-positional-argument
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
venvPath = "."
venv = ".venv"
